apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "fhevm.fullname" . }}-async-test-config
  labels:
    {{- include "fhevm.labels" . | nindent 4 }}
data:
  run-async-test.sh: |
    #!/bin/bash
    
    # Enable error handling
    set -euo pipefail
    
    # Logging setup
    LOGFILE="/tmp/async-test.log"
    exec 1> >(tee -a "$LOGFILE") 2>&1
    
    log() {
      echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
    }
    
    error() {
      log "ERROR: $1"
      exit 1
    }
    
    # Function to check required commands
    check_requirements() {
      local requirements=(npx)
      for cmd in "${requirements[@]}"; do
        if ! command -v "$cmd" >/dev/null 2>&1; then
          error "Required command not found: $cmd"
        fi
      done
      log "All required commands are available"
    }
    
    # Main execution wrapped in error handling
    main() {
      log "Starting async test execution"
      
      # Check requirements
      check_requirements
      
      # Check if FHEVM directory exists
      if [ ! -d "fhevm" ]; then
        error "FHEVM directory not found. Please ensure test preparation job has run successfully."
      fi
      
      cd fhevm || error "Failed to change to fhevm directory"
      
      # Run async test
      log "Running async decrypt uint8 test"
      npx hardhat test --grep 'test async decrypt uint8' || error "Async test failed"
      
      log "Async test completed successfully"
    }
    
    # Run main function with error handling
    main "$@" || {
      log "Script failed with exit code $?"
      cat "$LOGFILE"
      exit 1
    }
    
    # Display final status
    if [ -f "$LOGFILE" ]; then
      log "Full logs available in $LOGFILE"
    fi